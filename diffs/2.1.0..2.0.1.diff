diff --git a/RbDiffApp/README.md b/RbDiffApp/README.md
index 2ce040e..2684bdb 100644
--- a/RbDiffApp/README.md
+++ b/RbDiffApp/README.md
@@ -1,6 +1,6 @@
 # React.js Boilerplate
 
-Quick setup for new offline–first React.js applications featuring Redux, hot–reloading, PostCSS, react-router, ServiceWorker, AppCache and Mocha.
+Quick setup for new React.js applications featuring Redux, hot–reloading, PostCSS, react-router and Mocha.
 
 -----
 
@@ -16,8 +16,6 @@ Quick setup for new offline–first React.js applications featuring Redux, hot
 
 - [**react-router**](https://github.com/rackt/react-router) is used for routing in this boilerplate. Using the new, and currently unreleased, `1.0` version, react-router makes routing really easy to do and takes care of a lot of the work. Since the version is not officially out yet, the [documentation](https://github.com/rackt/react-router/blob/master/doc/00%20Guides/0%20Overview.md) is not fully finished, but by far finished enough to work for most needs.
 
-- [ServiceWorker](http://www.html5rocks.com/en/tutorials/service-worker/introduction/) and [AppCache](http://www.html5rocks.com/en/tutorials/appcache/beginner/) make it possible to use your application offline. As soon as the website has been opened once, it is cached and available without a network connection. [`manifest.json`](https://developer.chrome.com/multidevice/android/installtohomescreen) is specifically for Chrome on Android. Users can add the website to the homescreen and use it like a native app!
-
 ## Getting started
 
 1. Clone this repo using `git clone git@github.com:mxstbr/react-boilerplate`.
@@ -56,8 +54,6 @@ The boilerplate uses PostCSS, and includes a few plugins by default:
 
 * `postcss-focus`: Adds a `:focus` selector to every `:hover`.
 
-* `postcss-font-magician`: Magically adds a `@font-face` declaration for fonts mentioned somewhere in the CSS. For a list of supported fonts see the [github page](https://github.com/jonathantneal/postcss-font-magician)!
-
 * `autoprefixer-core`: Prefixes your CSS automatically, supporting the last two versions of all major browsers and IE 8 and up.
 
 * `cssnano`: Optimizes your CSS file. For a full list of optimizations check [the offical website](http://cssnano.co/optimisations/).
@@ -100,10 +96,6 @@ The folder structure of the JS files reflects how [Redux](https://github.com/gae
 
 Unit tests live in the `test` directory, and are run with `npm test`. There are two files in there already, testing that the current AppActions and Reducers are working correctly. Should you be stuck and have no idea what is going on check out the official [Mocha documentation](http://mochajs.org)!
 
-## Offline usage
-
-To cache a file for offline use, add it to `app.appcache` and to the `urlsToCache` variable in the `serviceworker.js` file.
-
 ## License
 
 This project is licensed under the MIT license, Copyright (c) 2015 Maximilian Stoiber. For more information see `LICENSE.md`.
\ No newline at end of file
diff --git a/RbDiffApp/app.appcache b/RbDiffApp/app.appcache
deleted file mode 100644
index 9bada47..0000000
--- a/RbDiffApp/app.appcache
+++ /dev/null
@@ -1,7 +0,0 @@
-CACHE MANIFEST
-
-# Version 3
-
-index.html
-js/bundle.js
-serviceworker.js
\ No newline at end of file
diff --git a/RbDiffApp/css/base/_base.css b/RbDiffApp/css/base/_base.css
index 88a1dee..76cacf1 100644
--- a/RbDiffApp/css/base/_base.css
+++ b/RbDiffApp/css/base/_base.css
@@ -21,5 +21,4 @@ html,
 body {
 	margin: 0;
 	padding: 0;
-	font-family: 'Open Sans', Helvetica Neue, Helvetica, Arial, sans-serif;
 }
\ No newline at end of file
diff --git a/RbDiffApp/index.html b/RbDiffApp/index.html
index bd99cb5..21975eb 100644
--- a/RbDiffApp/index.html
+++ b/RbDiffApp/index.html
@@ -1,11 +1,8 @@
 <!doctype html>
-<html lang="en" manifest="app.appcache">
+<html lang="en">
 	<head>
 		<meta charset="utf-8">
     	<meta name="viewport" content="width=device-width, initial-scale=1">
-        <link rel="manifest" href="manifest.json">
-        <meta name="mobile-web-app-capable" content="yes">
-        <link rel="icon" sizes="124x124" href="favicon.png">
 		<title>React.js Boilerplate</title>
 	</head>
 	<body>
diff --git a/RbDiffApp/js/app.js b/RbDiffApp/js/app.js
index d542b24..77259d7 100644
--- a/RbDiffApp/js/app.js
+++ b/RbDiffApp/js/app.js
@@ -1,15 +1,3 @@
-if ('serviceWorker' in navigator) {
-  navigator.serviceWorker.register('/serviceworker.js').then(function(registration) {
-    // Registration was successful
-    console.log('ServiceWorker registration successful with scope: ',    registration.scope);
-  }).catch(function(err) {
-    // registration failed :(
-    console.log('ServiceWorker registration failed: ', err);
-  });
-} else {
-  console.log('No ServiceWorker support :-(');
-}
-
 import React from 'react';
 import { createStore } from 'redux';
 import { Provider } from 'react-redux';
diff --git a/RbDiffApp/js/components/HomePage.react.js b/RbDiffApp/js/components/HomePage.react.js
index 62048d3..be34d6c 100644
--- a/RbDiffApp/js/components/HomePage.react.js
+++ b/RbDiffApp/js/components/HomePage.react.js
@@ -8,7 +8,7 @@ class HomePage extends Component {
     const { dispatch, projectName, ownerName } = this.props;
     return (
 			<div className="wrapper">
-        <img className="logo" src={require('../../img/logo.png')} />
+        <img className="logo" src={require('file!../../img/logo.png')} />
 				<h1>Hello World!</h1>
         <h2>This is the demo for the <span className="home__text--red">{ projectName }</span> by <a href={'https://twitter.com/' + ownerName} >@{ ownerName }</a></h2>
         <label className="home__label">Change to your project name:
diff --git a/RbDiffApp/manifest.json b/RbDiffApp/manifest.json
deleted file mode 100644
index e07264b..0000000
--- a/RbDiffApp/manifest.json
+++ /dev/null
@@ -1,33 +0,0 @@
-{
-  "name": "React Boilerplate",
-  "icons": [
-    {
-      "src": "favicon.png",
-      "sizes": "48x48",
-      "type": "image/png",
-      "density": 1.0
-    },
-    {
-      "src": "favicon.png",
-      "sizes": "96x96",
-      "type": "image/png",
-      "density": 2.0
-    },
-    {
-      "src": "favicon.png",
-      "sizes": "144x144",
-      "type": "image/png",
-      "density": 3.0
-    },
-    {
-      "src": "favicon.png",
-      "sizes": "192x192",
-      "type": "image/png",
-      "density": 4.0
-    }
-  ],
-  "start_url": "index.html",
-  "display": "standalone",
-  "orientation": "portrait",
-  "background_color": "#FFFFFF"
-}
\ No newline at end of file
diff --git a/RbDiffApp/package.json b/RbDiffApp/package.json
index 1fafb8b..05450cb 100644
--- a/RbDiffApp/package.json
+++ b/RbDiffApp/package.json
@@ -1,17 +1,16 @@
 {
   "name": "reactjs-boilerplate",
-  "version": "2.1.0",
+  "version": "2.0.0",
   "description": "Quick setup for new React.js applications featuring Redux, hot–reloading, PostCSS, react-router and Mocha.",
   "dependencies": {
     "flux": "^2.0.0",
     "react": "^0.13.0",
     "react-redux": "^0.2.2",
     "react-router": "^1.0.0-beta3",
-    "redux": "^1.0.0"
+    "redux": "^1.0.0-rc"
   },
   "devDependencies": {
     "autoprefixer-core": "^5.2.1",
-    "babel": "^5.8.21",
     "babel-core": "^5.8.20",
     "babel-eslint": "^4.0.5",
     "babel-loader": "^5.3.2",
@@ -26,14 +25,12 @@
     "mocha": "^2.2.5",
     "object.assign": "^3.0.1",
     "postcss-focus": "^0.1.1",
-    "postcss-font-magician": "^1.3.0",
     "postcss-import": "^6.2.0",
     "postcss-loader": "^0.5.1",
     "postcss-reporter": "^0.4.0",
     "postcss-simple-vars": "^0.3.0",
     "react-hot-loader": "^1.2.8",
     "style-loader": "^0.12.3",
-    "url-loader": "^0.5.6",
     "webpack": "^1.10.5",
     "webpack-dev-server": "^1.10.1"
   },
@@ -44,7 +41,7 @@
   "scripts": {
     "test": "mocha --compilers js:babel/register --recursive",
     "start": "node server.js",
-    "build": "rm -rf build | webpack --config webpack.build.config.js --progress --colors -p"
+    "build": "webpack --config webpack.build.config.js --progress --colors -p"
   },
   "author": "Max Stoiber",
   "license": "MIT"
diff --git a/RbDiffApp/server.js b/RbDiffApp/server.js
index 1d7d643..756aca4 100644
--- a/RbDiffApp/server.js
+++ b/RbDiffApp/server.js
@@ -2,7 +2,7 @@
 
 var webpack = require('webpack');
 var WebpackDevServer = require('webpack-dev-server');
-var config = require('./webpack.build.config');
+var config = require('./webpack.config');
 
 new WebpackDevServer(webpack(config), { // Start a server
   publicPath: config.output.publicPath,
diff --git a/RbDiffApp/serviceworker.js b/RbDiffApp/serviceworker.js
deleted file mode 100644
index 24e653f..0000000
--- a/RbDiffApp/serviceworker.js
+++ /dev/null
@@ -1,57 +0,0 @@
-var CACHE_NAME = 'react-boilerplate-cache-v1';
-// The files we want to cache
-var urlsToCache = [
-  '/',
-  '/js/bundle.js'
-];
-
-// Set the callback for the install step
-self.addEventListener('install', function(event) {
-    // Perform install steps
-    // event.waitUntil(
-    caches.open(CACHE_NAME)
-      .then(function(cache) {
-        console.log('Opened cache');
-        return cache.addAll(urlsToCache);
-      });
-});
-
-self.addEventListener('fetch', function(event) {
-  event.respondWith(
-    caches.match(event.request)
-      .then(function(response) {
-        // Cache hit - return response
-        if (response) {
-          return response;
-        }
-
-        // IMPORTANT: Clone the request. A request is a stream and
-        // can only be consumed once. Since we are consuming this
-        // once by cache and once by the browser for fetch, we need
-        // to clone the response
-        var fetchRequest = event.request.clone();
-
-        return fetch(fetchRequest).then(
-          function(response) {
-            // Check if we received a valid response
-            if(!response || response.status !== 200 || response.type !== 'basic') {
-              return response;
-            }
-
-            // IMPORTANT: Clone the response. A response is a stream
-            // and because we want the browser to consume the response
-            // as well as the cache consuming the response, we need
-            // to clone it so we have 2 stream.
-            var responseToCache = response.clone();
-
-            caches.open(CACHE_NAME)
-              .then(function(cache) {
-                cache.put(event.request, responseToCache);
-              });
-
-            return response;
-          }
-        );
-      })
-    );
-});
\ No newline at end of file
diff --git a/RbDiffApp/webpack.build.config.js b/RbDiffApp/webpack.build.config.js
index ab64107..6af0557 100644
--- a/RbDiffApp/webpack.build.config.js
+++ b/RbDiffApp/webpack.build.config.js
@@ -18,9 +18,6 @@ module.exports = {
       }, {
         test:   /\.css$/, // Transform all .css files required somewhere within an entry point...
         loader: "style-loader!css-loader!postcss-loader" // ...with PostCSS
-      }, {
-        test: /\.jpe?g$|\.gif$|\.png$/i,
-        loader: "url-loader?limit=10000"
       }
     ]
   },
@@ -29,7 +26,6 @@ module.exports = {
       require('postcss-import')(), // Import all the css files...
       require('postcss-simple-vars')(), // ...then replace the variables...
       require('postcss-focus')(), // ...add a :focus to ever :hover...
-      require('postcss-font-magician')({}), // ...automagically add @font-face declarations...
       require('autoprefixer-core')({ // ...add vendor prefixes...
         browsers: ['last 2 versions', 'IE > 8'] // ...supporting the last 2 major browser versions and IE 8 and up...
       }),
@@ -64,7 +60,8 @@ module.exports = {
         minifyCSS: true,
         minifyURLs: true
       }
-    })
+    }),
+    new webpack.NoErrorsPlugin() // No assets get emitted that throw errors
   ],
   target: "web", // Make web variables accessible to webpack, e.g. window
 }
\ No newline at end of file
diff --git a/RbDiffApp/webpack.config.js b/RbDiffApp/webpack.config.js
index 60e3604..82fba43 100644
--- a/RbDiffApp/webpack.config.js
+++ b/RbDiffApp/webpack.config.js
@@ -20,9 +20,6 @@ module.exports = {
     	}, {
         test:   /\.css$/, // Transform all .css files required somewhere within an entry point...
         loader: "style-loader!css-loader!postcss-loader" // ...with PostCSS
-      }, {
-        test: /\.jpe?g$|\.gif$|\.png$/i,
-        loader: "url-loader?limit=10000"
       }
     ]
 	},
@@ -35,7 +32,6 @@ module.exports = {
       }),
      	require('postcss-simple-vars')(), // ...then replace the variables...
      	require('postcss-focus')(), // ...add a :focus to ever :hover...
-      require('postcss-font-magician')({}), // ...automagically add @font-face declarations...
      	require('autoprefixer-core')({ // ...and add vendor prefixes...
      		browsers: ['last 2 versions', 'IE > 8'] // ...supporting the last 2 major browser versions and IE 8 and up...
      	}),
@@ -45,7 +41,8 @@ module.exports = {
 		];
 	},
 	plugins: [
-		new webpack.HotModuleReplacementPlugin() // Make hot loading work
+		new webpack.HotModuleReplacementPlugin(), // Make hot loading work
+		new webpack.NoErrorsPlugin() // No assets get emitted that throw errors
 	],
 	target: "web", // Make web variables accessible to webpack, e.g. window
 	stats: false, // Don't show stats in the console
